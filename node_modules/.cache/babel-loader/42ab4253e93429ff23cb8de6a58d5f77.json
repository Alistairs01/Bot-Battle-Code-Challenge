{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/alistairs/Development/CodeAssignments/Phase-2/code-challenges/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  _s();\n\n  //start here with your code for step one\n  const [bots, setBots] = useState([]); // Function to fetch bot data from the backend\n\n  const fetchBots = async () => {\n    try {\n      const response = await fetch('http://localhost:8002/bots');\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch bots');\n      }\n\n      const data = await response.json();\n      setBots(data); // Update state with fetched bot data\n    } catch (error) {\n      console.error('Error fetching bots:', error); // Handle error gracefully, show error message to the user, retry fetching, etc.\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BotsPage, \"JHUTDGtaCkjwbCpsXCrF/Tt2iHQ=\");\n\n_c = BotsPage;\nexport default BotsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"sources":["/home/alistairs/Development/CodeAssignments/Phase-2/code-challenges/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js"],"names":["React","useState","useEffect","YourBotArmy","BotCollection","BotsPage","bots","setBots","fetchBots","response","fetch","ok","Error","data","json","error","console"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB;AACA,QAAM,CAACC,IAAD,EAAQC,OAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CAFkB,CAIjB;;AACA,QAAMO,SAAS,GAAG,YAAY;AAC7B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAAD,CAA5B;;AACA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AACD,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACAP,MAAAA,OAAO,CAACM,IAAD,CAAP,CANE,CAMa;AAChB,KAPD,CAOE,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC,EADc,CAEd;AACD;AAEF,GAbA;;AAcD,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAzBQV,Q;;KAAAA,Q;AA2BT,eAAeA,QAAf","sourcesContent":["import React,{ useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  //start here with your code for step one\n  const [bots , setBots ] = useState([])\n\n   // Function to fetch bot data from the backend\n   const fetchBots = async () => {\n    try {\n      const response = await fetch('http://localhost:8002/bots');\n      if (!response.ok) {\n        throw new Error('Failed to fetch bots');\n      }\n      const data = await response.json();\n      setBots(data); // Update state with fetched bot data\n    } catch (error) {\n      console.error('Error fetching bots:', error);\n      // Handle error gracefully, show error message to the user, retry fetching, etc.\n    }\n    \n  };\n  return (\n    <div>\n      <YourBotArmy />\n      <BotCollection />\n    </div>\n  )\n}\n\nexport default BotsPage;\n"]},"metadata":{},"sourceType":"module"}