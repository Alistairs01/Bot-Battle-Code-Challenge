{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/alistairs/Development/CodeAssignments/Phase-2/code-challenges/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nimport BotSpecs from \"./BotSpecs\";\n\nfunction BotsPage() {\n  _s();\n\n  //start here with your code for step one\n  const [bots, setBots] = useState([]);\n  const [army, setArmy] = useState([]);\n  const [selectBot, setSelectBot] = useState(null);\n  const [showSpecs, setShowSpecs] = useState(false);\n  useEffect(() => {\n    fetch(`http://localhost:8002/bots`).then(r => r.json()).then(data => setBots(data)).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n\n  function handleSelectBot(bot) {\n    setSelectBot(bot);\n    setShowSpecs(true);\n  }\n\n  ;\n\n  function handleAddToArmy() {\n    if (selectBot) {\n      if (!army.some(bot => bot.id === setSelectBot.id)) {\n        setArmy([...army, selectBot]);\n      }\n\n      setSelectBot(null);\n      setShowSpecs(false);\n    }\n  }\n\n  ;\n\n  function handleGoBack() {\n    setSelectBot(null);\n    setShowSpecs(false);\n  }\n\n  ;\n\n  function handleDischargefromArmy(botId) {\n    const updatedBots = army.filter(bot => bot.id !== botId);\n    setArmy(updatedBots);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      bots: army,\n      onDischarge: handleDischargefromArmy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), showSpecs ? /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectBot,\n      onGoBack: handleGoBack,\n      onAddToArmy: handleAddToArmy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      onSelectBot: handleSelectBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BotsPage, \"5EPNEx4+8FyvXdlf5Jb1nx4IO58=\");\n\n_c = BotsPage;\nexport default BotsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"sources":["/home/alistairs/Development/CodeAssignments/Phase-2/code-challenges/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js"],"names":["React","useState","useEffect","YourBotArmy","BotCollection","BotSpecs","BotsPage","bots","setBots","army","setArmy","selectBot","setSelectBot","showSpecs","setShowSpecs","fetch","then","r","json","data","catch","error","console","handleSelectBot","bot","handleAddToArmy","some","id","handleGoBack","handleDischargefromArmy","botId","updatedBots","filter"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB;AACA,QAAM,CAACC,IAAD,EAAQC,OAAR,IAAmBP,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACQ,IAAD,EAAQC,OAAR,IAAmBT,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACU,SAAD,EAAaC,YAAb,IAA6BX,QAAQ,CAAC,IAAD,CAA3C;AACA,QAAM,CAACY,SAAD,EAAaC,YAAb,IAA6Bb,QAAQ,CAAC,KAAD,CAA3C;AAEDC,EAAAA,SAAS,CAAC,MAAM;AACfa,IAAAA,KAAK,CAAE,4BAAF,CAAL,CACCC,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEMG,IAAI,IAAIX,OAAO,CAACW,IAAD,CAFrB,EAGCC,KAHD,CAGQC,KAAD,IAAW;AAACC,MAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AAClB,KAJD;AAKD,GANS,EAMP,EANO,CAAT;;AAOD,WAASE,eAAT,CAA0BC,GAA1B,EAA+B;AAC7BZ,IAAAA,YAAY,CAACY,GAAD,CAAZ;AACAV,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAAA;;AACD,WAASW,eAAT,GAA4B;AAC1B,QAAId,SAAJ,EAAe;AAEb,UAAG,CAACF,IAAI,CAACiB,IAAL,CAAUF,GAAG,IAAIA,GAAG,CAACG,EAAJ,KAAWf,YAAY,CAACe,EAAzC,CAAJ,EAAkD;AAChDjB,QAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUE,SAAV,CAAD,CAAP;AACH;;AACDC,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACA;;AAAA;;AACD,WAASc,YAAT,GAA0B;AACxBhB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAAA;;AACD,WAASe,uBAAT,CAAkCC,KAAlC,EAAyC;AACvC,UAAMC,WAAW,GAAGtB,IAAI,CAACuB,MAAL,CAAYR,GAAG,IAAIA,GAAG,CAACG,EAAJ,KAAWG,KAA9B,CAApB;AACApB,IAAAA,OAAO,CAACqB,WAAD,CAAP;AAED;;AAAA;AAEC,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAItB,IAArB;AAA4B,MAAA,WAAW,EAAIoB;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF,EAEGhB,SAAS,gBACR,QAAC,QAAD;AAAU,MAAA,GAAG,EAAEF,SAAf;AAA0B,MAAA,QAAQ,EAAEiB,YAApC;AAAkD,MAAA,WAAW,EAAEH;AAA/D;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGV,QAAC,aAAD;AAAe,MAAA,IAAI,EAAElB,IAArB;AAA2B,MAAA,WAAW,EAAEgB;AAAxC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAhDQjB,Q;;KAAAA,Q;AAkDT,eAAeA,QAAf","sourcesContent":["import React,{ useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\nimport BotSpecs from \"./BotSpecs\";\n\nfunction BotsPage() {\n  //start here with your code for step one\n  const [bots , setBots] = useState([]);\n  const [army , setArmy] = useState([]);\n  const [selectBot , setSelectBot] = useState(null);\n  const [showSpecs , setShowSpecs] = useState(false);\n\n useEffect(() => {\n  fetch(`http://localhost:8002/bots`)\n  .then(r => r.json())\n  .then(data => setBots(data))\n  .catch((error) => {console.error(\"Error fetching data:\", error)\n  });\n}, []);\nfunction handleSelectBot (bot) {\n  setSelectBot(bot)\n  setShowSpecs(true)\n};\nfunction handleAddToArmy () {\n  if (selectBot) {\n\n    if(!army.some(bot => bot.id === setSelectBot.id)) {\n      setArmy([...army, selectBot])\n  }\n  setSelectBot(null)\n  setShowSpecs(false)\n}\n};\nfunction handleGoBack ()  {\n  setSelectBot(null);\n  setShowSpecs(false);\n};\nfunction handleDischargefromArmy (botId) {\n  const updatedBots = army.filter(bot => bot.id !== botId)\n  setArmy(updatedBots)\n\n};\n\n  return (\n    <div>\n      <YourBotArmy bots = {army}  onDischarge = {handleDischargefromArmy} />\n      {showSpecs ?(\n        <BotSpecs bot={selectBot} onGoBack={handleGoBack} onAddToArmy={handleAddToArmy} />\n      ) : (\n      <BotCollection bots={bots} onSelectBot={handleSelectBot} />\n      )}\n    </div>\n  )\n}\n\nexport default BotsPage;\n"]},"metadata":{},"sourceType":"module"}